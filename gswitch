#!/bin/sh -x

if [ "$(whoami)" != "root" ]; then
 echo "You need to be root."
 exit
fi

EGPU_TEMPLATE="/etc/X11/xorg.conf.egpu"
EGPU_BUS_ID=$(awk '/BusID/{gsub(/(PCI:|\")/," ");print$2}' < ${EGPU_TEMPLATE})
XORG_DRIVER=$(awk '/Driver/{gsub("\"","");print$2}' < ${EGPU_TEMPLATE})

ask_reload() {
  QUESTION=$1
  echo "${QUESTION}"
  read ANSWER
  case ${ANSWER} in
    Y|y|Yes|yes)
      RELOAD="true"
    ;;
    N|n|No|no)
      RELOAD="false"
    ;;
    *)
      echo "Unknown argument: ${ANSWER}."
      exit 1
    ;;
  esac
}

do_reload() {
  ( trap '' HUP TERM
    while [ "$(systemctl status display-manager | awk '/Active:/{print$2}')" \
      = "active" ]; do
      sleep 1
    done
    if [ ${XORG_DRIVER} = "nvidia" ]; then
      for DRIVER in nvidia_uvm nvidia_drm nvidia_modeset nvidia; do
        modprobe -r ${DRIVER}
      done
      modprobe nvidia
    fi
    systemctl start display-manager.service ) &
  systemctl stop display-manager.service
  exit 0
}

switch_egpu() {
  if [ -h /etc/X11/xorg.conf ] && \
     [ -f /etc/X11/xorg.conf.egpu ] && \
     [ "$(readlink /etc/X11/xorg.conf)" = "/etc/X11/xorg.conf.egpu" ]; then
    ask_reload "You are already set up. Would you like to reload? (Y/n)"
    if [ ${RELOAD} = "true" ]; then
      do_reload
    else
      exit 0
    fi
  else
    ln -s /etc/X11/xorg.conf.egpu /etc/X11/xorg.conf
    ask_reload "You are now set up. Would you like to reload? (Y/n)"
    if [ ${RELOAD} = "true" ]; then
      do_reload
    else
      exit 0
    fi
  fi
}

switch_internal() {
  if [ -h /etc/X11/xorg.conf ] && \
     [ -f /etc/X11/xorg.conf.egpu ] && \
     [ "$(readlink /etc/X11/xorg.conf)" = "/etc/X11/xorg.conf.egpu" ]; then
    rm -f /etc/X11/xorg.conf
    ask_reload "You are now set up. Would you like to reload? (Y/n)"
    if [ ${RELOAD} = "true" ]; then
      do_reload
    else
      exit 0
    fi
  else
    ask_reload "You are already set up. Would you like to reload? (Y/n)"
    if [ ${RELOAD} = "true" ]; then
      do_reload
    else
      exit 0
    fi
  fi
}

case $1 in
  egpu)
    switch_egpu
  ;;
  internal)
    switch_internal
  ;;
  boot)
    MODE="internal"
    for HEX_DEVICE in $(lspci | grep -i 'vga' | cut -f 1 -d ' '); do
      DEC_DEVICE=""
      for HEX_VALUE in $(echo ${HEX_DEVICE} | tr ':|\.' ' '); do
        HEX_VALUE_UPPER=$(echo ${HEX_VALUE} | tr '[a-z]' '[A-Z]')
        DEC_VALUE=$(echo "ibase=16; ${HEX_VALUE_UPPER}" | bc)
        DEC_DEVICE="${DEC_DEVICE}:${DEC_VALUE}"
        DEC_DEVICE=$(echo ${DEC_DEVICE} | sed 's/^://')
        if [ "${DEC_DEVICE}" = "${EGPU_BUS_ID}" ]; then
          MODE="egpu"
          break
        fi
      done
    done
    case ${MODE} in
      egpu)
        yes | switch_egpu
      ;;
      internal)
        yes | switch_internal
      ;;
    esac
  ;;
  *)
    echo "Unknown argument: ${1}."
    echo "Valid arguments are \"egpu\", \"internal\" or \"boot\"."
    exit 1
  ;;
esac
